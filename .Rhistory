base_dir          <- getwd()
scripts_dir       <- paste0(base_dir, "/R")
tmp_dir           <- paste0(base_dir, "/tmp")
raw_data_dir      <- paste0(base_dir, "/data/raw")
#source(paste0(scripts_dir, "/readModels.R"))
source(paste0(scripts_dir, "/readIBC.R"))
IBC_grass <- models$Grass3 %>%
select(-Productivity, -Model, -SeedRain) %>%
mutate(SpeciesID = as.factor(SpeciesID))
IBC_grass_traits <- IBC_grass_traits %>%
mutate(SpeciesID = as.factor(SpeciesID))
#IBC_grass <- inner_join(IBC_grass, IBC_grass_traits, by = c("SpeciesID"))
IBC_grass <- inner_join(IBC_grass, IBC_grass_traits) %>%
select(Rep, Ninitial, SpeciesID, Year, Stage, Biomass, LMR, MaxMass, Gmax, SLA, meanSpacerLength)
IBC_grass
options(width = 1000)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
fig.width = 4,
fig.width = 8,
size = "small")
#library(data.table)
#library(tidyverse)
#library(scales)
library(ggplot2)
#library(ggthemes)
#library(gganimate)
library(viridis)
#library(cowplot)
#library(plotly)
#library(randomForest)
#library(ggpubr)
#library(pdp)
#library(dplyr)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)); setwd("../../")
base_dir          <- getwd()
scripts_dir       <- paste0(base_dir, "/R")
raw_data_dir      <- paste0(base_dir, "/data/raw")
tmp_dir           <- paste0(base_dir, "/tmp")
#source(paste0(scripts_dir, "/readModels.R"))
t1_vs_t2_vs_biomass_meta_iso <- function(plotName,model,NoSpp,g_by,Biomass,trait1,trait2,xlab,ylab){
labNoSpp <- if (NoSpp == 32) "32-species mixture" else  "monoculture"
#labNoSpp <- if (NoSpp == 1) "monoculture"
model.32 <- model %>%
filter(Ninitial == NoSpp,
Year %in% c(100, 200)) %>%
#100th year: last step of Metacommunity stage
#200th year: last step of Isolation stage
group_by_at(g_by) %>%
summarise(Biomass = mean(Biomass)) %>%
filter(Biomass > 0) %>%
mutate(Biomass = log(Biomass)) %>%
mutate(Stage = recode(Stage, "assembly" = "Metacommunity", "With seed inflow" = "Metacommunity",
"disassembly" = "Isolation", "Without seed inflow" = "Isolation"))
model.032 <- model %>%
filter(Ninitial == NoSpp,
Year %in% c(100, 200)) %>%
#100th year: last step of Metacommunity stage
#200th year: last step of Isolation stage
group_by_at(g_by) %>%
summarise(Biomass = mean(Biomass)) %>%
filter(Biomass == 0) %>%
mutate(Stage = recode(Stage, "assembly" = "Metacommunity", "With seed inflow" = "Metacommunity",
"disassembly" = "Isolation", "Without seed inflow" = "Isolation"))
p1 <- ggplot() +
geom_point(data = model.32,
aes_string(x = trait1,
y = trait2,
color = Biomass, alpha = 0.7,
size = Biomass),
position=position_jitter(h=0.01, w=0.05)) +
geom_point(data = model.032, shape = 4,
aes_string(x = trait1,
y = trait2),
position=position_jitter(h=0.01, w=0.05)) +
facet_grid(~fct_relevel(Stage, 'Metacommunity', 'Isolation')) +
scale_color_viridis() +
labs(color = paste0("Log mean biomass ",labNoSpp),
x = xlab,
y = ylab) +
theme_bw() +
theme(aspect.ratio = 1)
filename <- paste0(plotName,".pdf")
path <- paste0(tmp_dir,"/pdfs/")
ggsave(filename = filename
,path = path
,plot = p1
,height = 12
,width = 19
,units = "cm")
return(p1)
}
source(paste0(scripts_dir, "/to_test/readAdam.R"))
adam <- models$Grass1
adam <- adam %>%
ungroup() %>% # There shouldn't be groups anyways
mutate(Biomass = scales::rescale(Biomass,
to = c(0, 100)))
adam <- adam %>%
select(-Model, -SeedRain) %>%
mutate(SpeciesID = as.factor(SpeciesID))
adam_traits <- adam_traits %>%
mutate(SpeciesID = as.factor(SpeciesID))
adam <- inner_join(adam, adam_traits, by = c("SpeciesID"))
g_by <- c("SpeciesID", "Year", "Stage", "pNi", "no3i")
lab1 <- "pNi (aboveground N concentration)"
lab2 <- "no3i (nitrogen R*)"
p1 <- t1_vs_t2_vs_biomass_meta_iso("G1mono",adam,1,g_by,"Biomass","pNi","no3i",lab1,lab2)
adam
source(paste0(scripts_dir, "/to_test/readAdam.R"))
adam <- models$Grass1
adam <- adam %>%
#  ungroup() %>% # There shouldn't be groups anyways
mutate(Biomass = scales::rescale(Biomass,
to = c(0, 100)))
adam <- adam %>%
select(-Model, -SeedRain) %>%
mutate(SpeciesID = as.factor(SpeciesID))
adam_traits <- adam_traits %>%
mutate(SpeciesID = as.factor(SpeciesID))
adam <- inner_join(adam, adam_traits, by = c("SpeciesID"))
g_by <- c("SpeciesID", "Year", "Stage", "pNi", "no3i")
lab1 <- "pNi (aboveground N concentration)"
lab2 <- "no3i (nitrogen R*)"
p1 <- t1_vs_t2_vs_biomass_meta_iso("G1mono",adam,1,g_by,"Biomass","pNi","no3i",lab1,lab2)
adam
adam <- models$Grass1
adam <- adam %>%
ungroup() %>% # There shouldn't be groups anyways
mutate(Biomass = scales::rescale(Biomass,
to = c(0, 100)))
adam <- models$Grass1 %>%
ungroup() %>% # There shouldn't be groups anyways
mutate(Biomass = scales::rescale(Biomass,
to = c(0, 100)))
adam <- adam %>%
select(-Model, -SeedRain) %>%
mutate(SpeciesID = as.factor(SpeciesID))
adam_traits <- adam_traits %>%
mutate(SpeciesID = as.factor(SpeciesID))
adam <- inner_join(adam, adam_traits, by = c("SpeciesID"))
adam
source(paste0(scripts_dir, "/to_test/readLindsay.R"))
lindsay <- lindsay$Grass2%>%
ungroup() %>% # There shouldn't be groups anyways
mutate(Biomass = scales::rescale(Biomass,
to = c(0, 100)))
source(paste0(scripts_dir, "/to_test/readLindsay.R"))
lindsay <- models$Grass2%>%
ungroup() %>% # There shouldn't be groups anyways
mutate(Biomass = scales::rescale(Biomass,
to = c(0, 100)))
lindsay <- lindsay %>%
select(-Model, -SeedRain) %>%
mutate(SpeciesID = as.factor(SpeciesID))
lindsay_traits <- lindsay_traits %>%
mutate(SpeciesID = as.factor(SpeciesID))
lindsay <- inner_join(lindsay, lindsay_traits, by = c("SpeciesID"))
g_by <- c("SpeciesID", "Year", "Stage", "Vi", "thetai")
lab1 <- "Vi (volume of soil accessible to species i)"
lab2 <- "thetai (Nitrogen uptake rate per unit plant biomass)"
p3 <- t1_vs_t2_vs_biomass_meta_iso("G2mono",lindsay,1,g_by,"Biomass","Vi","thetai",lab1,lab2)
lindsay
source(paste0(scripts_dir, "/to_test/readIBC.R"))
IBC_grass <- models$Grass3
IBC_grass_traits <- IBC_grass_traits %>% mutate(SpeciesID = as.character(SpeciesID))
IBC_grass <- inner_join(IBC_grass, IBC_grass_traits) %>%
select(Rep, Ninitial, SpeciesID, Year, Stage, Productivity, Biomass, LMR, MaxMass, Gmax, SLA, meanSpacerLength)
#IBC_grass <- models$Grass3 %>%
#    select(-Model, -SeedRain) %>%
#    mutate(SpeciesID = as.factor(SpeciesID))
#
#IBC_grass_traits <- IBC_grass_traits %>%
#    mutate(SpeciesID = as.factor(SpeciesID))
#
#IBC_grass <- inner_join(IBC_grass, IBC_grass_traits, by = c("SpeciesID"))
#g_by <- c("SpeciesID", "Year", "Stage", "LMR.x", "MaxMass.x", "Gmax.x", "SLA.x", "meanSpacerLength.x")
g_by <- c("SpeciesID", "Year", "Stage", "LMR", "MaxMass", "Gmax", "SLA", "meanSpacerLength")
lab1 <- "Gmax (maximum resource utilization per time step)"
lab2 <- "MaxMass (Plant's maximum size)"
lab3 <- "LMR (leaf to mass ratio)"
p5 <- t1_vs_t2_vs_biomass_meta_iso("G3mono",IBC_grass,1,g_by,"Biomass","Gmax","MaxMass",lab1,lab2)
p6 <- t1_vs_t2_vs_biomass_meta_iso("G3mix",IBC_grass,32,g_by,"Biomass","Gmax","MaxMass",lab1,lab2)
source(paste0(scripts_dir, "/to_test/readPPA.R"))
PPA <- models$Forest1 %>%
select(-Model, -SeedRain)
g_by <- c("SpeciesID", "Year", "Stage", "PC1score", "PC2score")
lab1 <- "PC1score (associated with fast-slow lifecycle)"#plant height)"
lab2 <- "PC2score (associated with tree stature)"# LMA -leaf mass per area)"
p7 <- t1_vs_t2_vs_biomass_meta_iso("F1mono",PPA,1,g_by,"Biomass","PC1score","PC2score",lab1,lab2)
p8 <- t1_vs_t2_vs_biomass_meta_iso("F1mix",PPA,32,g_by,"Biomass","PC1score","PC2score",lab1,lab2)
PPA
source(paste0(scripts_dir, "/to_test/readTROLL.R"))
troll <- models$Forest2
troll <- troll %>%
ungroup() %>% # There shouldn't be groups anyways
mutate(Biomass = scales::rescale(Biomass,
to = c(0, 100)))
troll <- troll %>%
select(-Model, -SeedRain) %>%
mutate(SpeciesID = as.factor(SpeciesID))
troll_traits <- troll_traits %>%
mutate(SpeciesID = as.factor(SpeciesID))
troll <- inner_join(troll, troll_traits, by = c("SpeciesID"))
troll <- troll %>%
mutate(h_realmax = hmax * dmax / (dmax + ah)) %>%
select(-hmax, -ah)
troll
source(paste0(scripts_dir, "/to_test/readTROLL.R"))
troll <- models$Forest2
#troll <- troll %>%
#    ungroup() %>% # There shouldn't be groups anyways
#    mutate(Biomass = scales::rescale(Biomass,
#                                     to = c(0, 100)))
troll <- troll %>%
select(-Model, -SeedRain) %>%
mutate(SpeciesID = as.factor(SpeciesID))
troll_traits <- troll_traits %>%
mutate(SpeciesID = as.factor(SpeciesID))
troll <- inner_join(troll, troll_traits, by = c("SpeciesID"))
troll <- troll %>%
mutate(h_realmax = hmax * dmax / (dmax + ah)) %>%
select(-hmax, -ah)
troll
options(width = 1000)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
fig.width = 4,
fig.width = 8,
size = "small")
#library(data.table)
#library(tidyverse)
#library(scales)
library(ggplot2)
#library(ggthemes)
#library(gganimate)
library(viridis)
#library(cowplot)
#library(plotly)
#library(randomForest)
#library(ggpubr)
#library(pdp)
#library(dplyr)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)); setwd("../../")
base_dir          <- getwd()
scripts_dir       <- paste0(base_dir, "/R")
raw_data_dir      <- paste0(base_dir, "/data/raw")
tmp_dir           <- paste0(base_dir, "/tmp")
#source(paste0(scripts_dir, "/readModels.R"))
source(paste0(scripts_dir, "/readModels.R"))
t1_vs_t2_vs_biomass_meta_iso <- function(plotName,model,NoSpp,g_by,Biomass,trait1,trait2,xlab,ylab){
labNoSpp <- if (NoSpp == 32) "32-species mixture" else  "monoculture"
#labNoSpp <- if (NoSpp == 1) "monoculture"
model.32 <- model %>%
filter(Ninitial == NoSpp,
Year %in% c(100, 200)) %>%
#100th year: last step of Metacommunity stage
#200th year: last step of Isolation stage
group_by_at(g_by) %>%
summarise(Biomass = mean(Biomass)) %>%
filter(Biomass > 0) %>%
mutate(Biomass = log(Biomass)) %>%
mutate(Stage = recode(Stage, "assembly" = "Metacommunity", "With seed inflow" = "Metacommunity",
"disassembly" = "Isolation", "Without seed inflow" = "Isolation"))
model.032 <- model %>%
filter(Ninitial == NoSpp,
Year %in% c(100, 200)) %>%
#100th year: last step of Metacommunity stage
#200th year: last step of Isolation stage
group_by_at(g_by) %>%
summarise(Biomass = mean(Biomass)) %>%
filter(Biomass == 0) %>%
mutate(Stage = recode(Stage, "assembly" = "Metacommunity", "With seed inflow" = "Metacommunity",
"disassembly" = "Isolation", "Without seed inflow" = "Isolation"))
p1 <- ggplot() +
geom_point(data = model.32,
aes_string(x = trait1,
y = trait2,
color = Biomass, alpha = 0.7,
size = Biomass),
position=position_jitter(h=0.01, w=0.05)) +
geom_point(data = model.032, shape = 4,
aes_string(x = trait1,
y = trait2),
position=position_jitter(h=0.01, w=0.05)) +
facet_grid(~fct_relevel(Stage, 'Metacommunity', 'Isolation')) +
scale_color_viridis() +
labs(color = paste0("Log mean biomass ",labNoSpp),
x = xlab,
y = ylab) +
theme_bw() +
theme(aspect.ratio = 1)
filename <- paste0(plotName,".pdf")
path <- paste0(tmp_dir,"/pdfs/")
ggsave(filename = filename
,path = path
,plot = p1
,height = 12
,width = 19
,units = "cm")
return(p1)
}
adam
models$Grass1
#source(paste0(scripts_dir, "/to_test/readAdam.R"))
adam <- models$Grass1 %>%
ungroup() %>% # There shouldn't be groups anyways
mutate(Biomass = scales::rescale(Biomass,
to = c(0, 100)))
adam <- adam %>%
select(-Model, -SeedRain) %>%
mutate(SpeciesID = as.factor(SpeciesID))
adam_traits <- adam_traits %>%
mutate(SpeciesID = as.factor(SpeciesID))
adam <- inner_join(adam, adam_traits, by = c("SpeciesID"))
g_by <- c("SpeciesID", "Year", "Stage", "pNi", "no3i")
lab1 <- "pNi (aboveground N concentration)"
lab2 <- "no3i (nitrogen R*)"
p1 <- t1_vs_t2_vs_biomass_meta_iso("G1mono",adam,1,g_by,"Biomass","pNi","no3i",lab1,lab2)
adam
adam <- models$Grass1 #%>%
adam
#ungroup() %>% # There shouldn't be groups anyways
#mutate(Biomass = scales::rescale(Biomass,
#                                to = c(0, 100)))
adam <- adam %>%
select(-Model, -SeedRain) %>%
mutate(SpeciesID = as.factor(SpeciesID))
adam_traits <- adam_traits %>%
mutate(SpeciesID = as.factor(SpeciesID))
adam <- inner_join(adam, adam_traits, by = c("SpeciesID"))
g_by <- c("SpeciesID", "Year", "Stage", "pNi", "no3i")
lab1 <- "pNi (aboveground N concentration)"
lab2 <- "no3i (nitrogen R*)"
p1 <- t1_vs_t2_vs_biomass_meta_iso("G1mono",adam,1,g_by,"Biomass","pNi","no3i",lab1,lab2)
adam <- models$Grass1 #%>%
adam
#ungroup() %>% # There shouldn't be groups anyways
#mutate(Biomass = scales::rescale(Biomass,
#                                to = c(0, 100)))
adam <- adam %>%
select(-Model, -SeedRain) %>%
mutate(SpeciesID = as.factor(SpeciesID))
adam
adam_traits <- adam_traits %>%
mutate(SpeciesID = as.factor(SpeciesID))
adam_traits
adam <- inner_join(adam, adam_traits, by = c("SpeciesID"))
adam
adam <- models$Grass1 %>%
ungroup() %>% # There shouldn't be groups anyways
mutate(Biomass = scales::rescale(Biomass,
to = c(0, 100)))
adam
adam <- models$Grass1 %>%
ungroup() %>% # There shouldn't be groups anyways
mutate(Biomass = scales::rescale(Biomass,
to = c(0, 100)))%>%
select(-Model, -SeedRain) %>%
mutate(SpeciesID = as.factor(SpeciesID))
adam
models$Grass1
models$Grass2
models$Grass3
g_by <- c("SpeciesID", "Year", "Stage", "pNi", "no3i")
lab1 <- "pNi (aboveground N concentration)"
lab2 <- "no3i (nitrogen R*)"
p1 <- t1_vs_t2_vs_biomass_meta_iso("G1mono",adam,1,g_by,"Biomass","pNi","no3i",lab1,lab2)
p2 <- t1_vs_t2_vs_biomass_meta_iso("G1mix",adam,32,g_by,"Biomass","pNi","no3i",lab1,lab2)
#source(paste0(scripts_dir, "/to_test/readLindsay.R"))
lindsay <- models$Grass2%>%
ungroup() %>% # There shouldn't be groups anyways
mutate(Biomass = scales::rescale(Biomass,
to = c(0, 100)))%>%
select(-Model, -SeedRain) %>%
mutate(SpeciesID = as.factor(SpeciesID))
#lindsay_traits <- lindsay_traits %>%
#    mutate(SpeciesID = as.factor(SpeciesID))
#lindsay <- inner_join(lindsay, lindsay_traits, by = c("SpeciesID"))
g_by <- c("SpeciesID", "Year", "Stage", "Vi", "thetai")
lab1 <- "Vi (volume of soil accessible to species i)"
lab2 <- "thetai (Nitrogen uptake rate per unit plant biomass)"
p3 <- t1_vs_t2_vs_biomass_meta_iso("G2mono",lindsay,1,g_by,"Biomass","Vi","thetai",lab1,lab2)
p4 <- t1_vs_t2_vs_biomass_meta_iso("G2mix",lindsay,32,g_by,"Biomass","Vi","thetai",lab1,lab2)
models$Grass3
#source(paste0(scripts_dir, "/to_test/readIBC.R"))
IBC_grass <- models$Grass3
#IBC_grass_traits <- IBC_grass_traits %>% mutate(SpeciesID = as.character(SpeciesID))
#IBC_grass <- inner_join(IBC_grass, IBC_grass_traits) %>%
#    select(Rep, Ninitial, SpeciesID, Year, Stage, Productivity, Biomass, LMR, MaxMass, Gmax, SLA, meanSpacerLength)
#IBC_grass <- models$Grass3 %>%
#    select(-Model, -SeedRain) %>%
#    mutate(SpeciesID = as.factor(SpeciesID))
#
#IBC_grass_traits <- IBC_grass_traits %>%
#    mutate(SpeciesID = as.factor(SpeciesID))
#
#IBC_grass <- inner_join(IBC_grass, IBC_grass_traits, by = c("SpeciesID"))
#g_by <- c("SpeciesID", "Year", "Stage", "LMR.x", "MaxMass.x", "Gmax.x", "SLA.x", "meanSpacerLength.x")
g_by <- c("SpeciesID", "Year", "Stage", "LMR", "MaxMass", "Gmax", "SLA", "meanSpacerLength")
lab1 <- "Gmax (maximum resource utilization per time step)"
lab2 <- "MaxMass (Plant's maximum size)"
lab3 <- "LMR (leaf to mass ratio)"
p5 <- t1_vs_t2_vs_biomass_meta_iso("G3mono",IBC_grass,1,g_by,"Biomass","Gmax","MaxMass",lab1,lab2)
p6 <- t1_vs_t2_vs_biomass_meta_iso("G3mix",IBC_grass,32,g_by,"Biomass","Gmax","MaxMass",lab1,lab2)
IBC_grass
#source(paste0(scripts_dir, "/to_test/readIBC.R"))
IBC_grass <- models$Grass3 %>%
ungroup() %>% # There shouldn't be groups anyways
mutate(Biomass = scales::rescale(Biomass,
to = c(0, 100)))%>%
select(-Model, -SeedRain)
#IBC_grass_traits <- IBC_grass_traits %>% mutate(SpeciesID = as.character(SpeciesID))
#IBC_grass <- inner_join(IBC_grass, IBC_grass_traits) %>%
#    select(Rep, Ninitial, SpeciesID, Year, Stage, Productivity, Biomass, LMR, MaxMass, Gmax, SLA, meanSpacerLength)
#IBC_grass <- models$Grass3 %>%
#    select(-Model, -SeedRain) %>%
#    mutate(SpeciesID = as.factor(SpeciesID))
#
#IBC_grass_traits <- IBC_grass_traits %>%
#    mutate(SpeciesID = as.factor(SpeciesID))
#
#IBC_grass <- inner_join(IBC_grass, IBC_grass_traits, by = c("SpeciesID"))
#g_by <- c("SpeciesID", "Year", "Stage", "LMR.x", "MaxMass.x", "Gmax.x", "SLA.x", "meanSpacerLength.x")
g_by <- c("SpeciesID", "Year", "Stage", "LMR", "MaxMass", "Gmax", "SLA", "meanSpacerLength")
lab1 <- "Gmax (maximum resource utilization per time step)"
lab2 <- "MaxMass (Plant's maximum size)"
lab3 <- "LMR (leaf to mass ratio)"
p5 <- t1_vs_t2_vs_biomass_meta_iso("G3mono",IBC_grass,1,g_by,"Biomass","Gmax","MaxMass",lab1,lab2)
p6 <- t1_vs_t2_vs_biomass_meta_iso("G3mix",IBC_grass,32,g_by,"Biomass","Gmax","MaxMass",lab1,lab2)
#source(paste0(scripts_dir, "/to_test/readPPA.R"))
PPA <- models$Forest1 %>%
ungroup() %>% # There shouldn't be groups anyways
mutate(Biomass = scales::rescale(Biomass,
to = c(0, 100)))%>%
select(-Model, -SeedRain)
g_by <- c("SpeciesID", "Year", "Stage", "PC1score", "PC2score")
lab1 <- "PC1score (associated with fast-slow lifecycle)"#plant height)"
lab2 <- "PC2score (associated with tree stature)"# LMA -leaf mass per area)"
p7 <- t1_vs_t2_vs_biomass_meta_iso("F1mono",PPA,1,g_by,"Biomass","PC1score","PC2score",lab1,lab2)
p8 <- t1_vs_t2_vs_biomass_meta_iso("F1mix",PPA,32,g_by,"Biomass","PC1score","PC2score",lab1,lab2)
models$Forest2
#source(paste0(scripts_dir, "/to_test/readTROLL.R"))
troll <- models$Forest2 %>%
ungroup() %>% # There shouldn't be groups anyways
mutate(Biomass = scales::rescale(Biomass,
to = c(0, 100)))%>%
select(-Model, -SeedRain) %>%
mutate(SpeciesID = as.factor(SpeciesID))
#troll_traits <- troll_traits %>%
#    mutate(SpeciesID = as.factor(SpeciesID))
#troll <- inner_join(troll, troll_traits, by = c("SpeciesID"))
troll <- troll %>%
mutate(h_realmax = hmax * dmax / (dmax + ah)) %>%
select(-hmax, -ah)
g_by <- c("SpeciesID", "Year","Stage", "dmax", "wsg", "lma", "pmass", "nmass", "h_realmax")
lab1 <- "lma (leaf mass per area)"
lab2 <- "dmax (diameter at breast height threshold)"
lab3 <- "wsg (wood specific gravity)"
lab4 <- "pmass (leaf P content per dry mass)"
p9 <- t1_vs_t2_vs_biomass_meta_iso("F2mono",troll,1,g_by,"Biomass","dmax","wsg",lab2,lab3)
p10 <- t1_vs_t2_vs_biomass_meta_iso("F2mix",troll,32,g_by,"Biomass","lma","dmax",lab1,lab2)
source(paste0(scripts_dir, "/to_test/readBjoern.R"))
bjoern <- models$bjoern %>% #Dryland %>%
#bjoern <- bjoern %>%
ungroup() %>% # There shouldn't be groups anyways
mutate(Biomass = scales::rescale(Biomass,
to = c(0, 100)))%>%
select(-Model, -SeedRain) %>%
mutate(SpeciesID = as.factor(SpeciesID))
#bjoern_traits <- bjoern_traits %>%
#    mutate(SpeciesID = as.factor(SpeciesID))
#bjoern <- inner_join(bjoern, bjoern_traits, by = c("SpeciesID"))
g_by <- c("SpeciesID", "Year","Stage", "maxSize", "pLeaf", "pRoot", "pStorage")
lab1 <- "maxSize (maximum size/size at maturity) [gC]"
lab2 <- "pLeaf (allocation to leaf) [gC/gC]"
lab3 <- "pStorage (allocation to storage) [gC/gC]"
p11 <- t1_vs_t2_vs_biomass_meta_iso("Dmono",bjoern,1,g_by,"Biomass","maxSize","pStorage",lab1,lab3)
p12 <- t1_vs_t2_vs_biomass_meta_iso("Dmix",bjoern,32,g_by,"Biomass","maxSize","pLeaf",lab1,lab2)
ggarrange(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,
labels = c("Grass 1 monoculture","Grass 1 mixture","Grass 2 monoculture","Grass 2 mixture","Grass 3 monoculture","Grass 3 mixture","Forest 1 monoculture","Forest 1 mixture","Forest 2 monoculture","Forest 2 mixture","Dryland monoculture","Dryland mixture"),
ncol = 2, nrow = 6)
#library(cowplot)
#library(plotly)
#library(randomForest)
library(ggpubr)
ggarrange(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,
labels = c("Grass 1 monoculture","Grass 1 mixture","Grass 2 monoculture","Grass 2 mixture","Grass 3 monoculture","Grass 3 mixture","Forest 1 monoculture","Forest 1 mixture","Forest 2 monoculture","Forest 2 mixture","Dryland monoculture","Dryland mixture"),
ncol = 2, nrow = 6)
library(RColorBrewer)
library(ggplot2)
set.seed(1987)
# Prepare data frame
all_d <- data.frame(sCPI = c(0.75,0.15,0.1,0.89,0.07,0.03,0.75,0.1,0.15,0.07,0.89,0.03),
varnames = c(rep(c("A","B","C"),4)),
type = c(rep(c("Size","Resource","Resource"),4)),
condition = c(rep("Dominance",3),rep("Function",3),rep("Dominance",3),rep("Function",3)),
mName = c(rep("Positive",6),rep("Negative",6)))
all_d
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)); setwd("../../")
setwd("~/Documents/SimNet")
base_dir          <- getwd()
scripts_dir       <- paste0(base_dir, "/R")
tmp_dir           <- paste0(base_dir, "/tmp")
raw_data_dir      <- paste0(base_dir, "/data/raw")
#source(paste0(scripts_dir, "/readModels.R"))
source(paste0(scripts_dir, "/to_test/fx_cforest_party.R"))
### Grass3 (IBC-grass)
source(paste0(scripts_dir, "/to_test/readIBC.R"))
print(models$IBC_grass.noNDD)
