}
adam <- adam %>%
select(-Model, -SeedRain) %>%
mutate(SpeciesID = as.factor(SpeciesID))
adam_traits <- adam_traits %>%
mutate(SpeciesID = as.factor(SpeciesID))
adam <- inner_join(adam, adam_traits, by = c("SpeciesID"))
G1C1 <- randomForest_4conditions(adam,1,meta)
#save() <- G1C1
typeof((G1C1))
G1C1
meta = seq(80, 100)
iso = seq(180, 200)
randomForest_4conditions <- function(model,NoSpp,stage){
model.NoSpp <- model %>%
filter(Ninitial == NoSpp,
Year %in% stage) %>%
mutate(id = row_number()) %>%
mutate_if(is.character, as.factor) %>%
select(-SpeciesID, -Ninitial, -Stage, -Rep)
train <- model.NoSpp %>% sample_frac(.70)
test <- anti_join(model.NoSpp, train, by = 'id')
train <- train %>% select(-id)
test <- test %>% select(-id)
rf.NoSpp <- randomForest(data = as.data.frame(train),
Biomass ~ .,
importance = TRUE)
pred <- data.frame(pred = predict(rf.NoSpp, test))
title = paste("correlation: ", round(cor(pred, test$Biomass)[[1]], 2),
"  |  mean squared error: ", round(mean(rf.NoSpp$mse), 2),
"  |  R-squared: ", round(mean(rf.NoSpp$rsq), 2),
sep = "")
varImpPlot(rf.NoSpp, main = title)
return()
}
G1C1 <- randomForest_4conditions(adam,1,meta)
meta = seq(80, 100)
iso = seq(180, 200)
randomForest_4conditions <- function(model,NoSpp,stage){
model.NoSpp <- model %>%
filter(Ninitial == NoSpp,
Year %in% stage) %>%
mutate(id = row_number()) %>%
mutate_if(is.character, as.factor) %>%
select(-SpeciesID, -Ninitial, -Stage, -Rep)
train <- model.NoSpp %>% sample_frac(.70)
test <- anti_join(model.NoSpp, train, by = 'id')
train <- train %>% select(-id)
test <- test %>% select(-id)
rf.NoSpp <- randomForest(data = as.data.frame(train),
Biomass ~ .,
importance = TRUE)
pred <- data.frame(pred = predict(rf.NoSpp, test))
title = paste("correlation: ", round(cor(pred, test$Biomass)[[1]], 2),
"  |  mean squared error: ", round(mean(rf.NoSpp$mse), 2),
"  |  R-squared: ", round(mean(rf.NoSpp$rsq), 2),
sep = "")
varImpPlot(rf.NoSpp, main = title)
#return()
}
G1C1 <- randomForest_4conditions(adam,1,meta)
typeof(G1C1)
G1C1
meta = seq(80, 100)
iso = seq(180, 200)
randomForest_4conditions <- function(model,NoSpp,stage){
model.NoSpp <- model %>%
filter(Ninitial == NoSpp,
Year %in% stage) %>%
mutate(id = row_number()) %>%
mutate_if(is.character, as.factor) %>%
select(-SpeciesID, -Ninitial, -Stage, -Rep)
train <- model.NoSpp %>% sample_frac(.70)
test <- anti_join(model.NoSpp, train, by = 'id')
train <- train %>% select(-id)
test <- test %>% select(-id)
rf.NoSpp <- randomForest(data = as.data.frame(train),
Biomass ~ .,
importance = TRUE)
pred <- data.frame(pred = predict(rf.NoSpp, test))
title = paste("correlation: ", round(cor(pred, test$Biomass)[[1]], 2),
"  |  mean squared error: ", round(mean(rf.NoSpp$mse), 2),
"  |  R-squared: ", round(mean(rf.NoSpp$rsq), 2),
sep = "")
typeof(pred)
varImpPlot(rf.NoSpp, main = title)
#return()
}
G1C1 <- randomForest_4conditions(adam,1,meta)
G1C1 <- randomForest_4conditions(adam,1,meta)
options(width = 1000)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
fig.height = 4,
fig.width = 8,
size = "small")
library(data.table)
library(tidyverse)
library(ggthemes)
library(gganimate)
library(viridis)
library(cowplot)
library(scales)
library(plotly)
library(randomForest)
library(pdp)
PPA <- models[["PPA"]] %>%
select(-Model, -SeedRain)
PPA.monocultures <- PPA %>%
filter(Ninitial == 1,
Year %in% seq(180, 200)) %>%
mutate(id = row_number()) %>%
mutate_if(is.character, as.factor) %>%
select(-SpeciesID, -Ninitial, -Stage, -Rep)
train <- PPA.monocultures %>% sample_frac(.70)
train
test <- anti_join(PPA.monocultures, train, by = 'id')
train <- train %>% select(-id)
test <- test %>% select(-id)
rf.monocultures <- randomForest(data = as.data.frame(train),
Biomass ~ .,
importance = TRUE)
pred <- data.frame(pred = predict(rf.monocultures, test))
pred
typeof(pred)
title = paste("correlation: ", round(cor(pred, test$Biomass)[[1]], 2),
"  |  mean squared error: ", round(mean(rf.monocultures$mse), 2),
"  |  R-squared: ", round(mean(rf.monocultures$rsq), 2),
sep = "")
varImpPlot(rf.monocultures, main = title)
typeof(varImpPlot(rf.monocultures, main = title))
varImpPlot(rf.monocultures, main = title)
PPA.32 <- PPA %>%
filter(Ninitial == 32,
Year %in% seq(180, 200)) %>%
mutate(id = row_number()) %>%
mutate_if(is.character, as.factor) %>%
select(-SpeciesID, -Ninitial, -Stage, -Rep)
train <- PPA.32 %>% sample_frac(.70)
test <- anti_join(PPA.32, train, by = 'id')
train <- train %>% select(-id)
test <- test %>% select(-id)
rf.32 <- randomForest(data = as.data.frame(train),
Biomass ~ .,
importance = TRUE)
pred <- data.frame(pred = predict(rf.32, test))
title = paste("correlation: ", round(cor(pred, test$Biomass)[[1]], 2),
"  |  mean squared error: ", round(mean(rf.32$mse), 2),
"  |  R-squared: ", round(mean(rf.32$rsq), 2),
sep = "")
pdf(filename="test.pdf")
varImpPlot(rf.32, main = title)
dev.print(pdf,filename="test.pdf")
typeof(varImpPlot(rf.32, main = title))
typeof(varImpPlot(rf.32, main = title))
png("test.png")
varImpPlot(rf.32, main = title)
dev.off()
pdf("test.pdf")
varImpPlot(rf.32, main = title)
dev.off()
options(width = 1000)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
fig.height = 4,
fig.width = 8,
size = "small")
library(data.table)
library(tidyverse)
library(ggthemes)
library(gganimate)
library(viridis)
library(cowplot)
library(scales)
library(plotly)
library(randomForest)
library(pdp)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)); setwd("../")
base_dir          <- getwd()
scripts_dir       <- paste0(base_dir, "/R")
raw_data_dir      <- paste0(base_dir, "/data/raw")
source(paste0(scripts_dir, "/readModels.R"))
meta = seq(80, 100)
iso = seq(180, 200)
randomForest_4conditions <- function(modelName,model,NoSpp,stage){
model.NoSpp <- model %>%
filter(Ninitial == NoSpp,
Year %in% stage) %>%
mutate(id = row_number()) %>%
mutate_if(is.character, as.factor) %>%
select(-SpeciesID, -Ninitial, -Stage, -Rep)
train <- model.NoSpp %>% sample_frac(.70)
test <- anti_join(model.NoSpp, train, by = 'id')
train <- train %>% select(-id)
test <- test %>% select(-id)
rf.NoSpp <- randomForest(data = as.data.frame(train),
Biomass ~ .,
importance = TRUE)
pred <- data.frame(pred = predict(rf.NoSpp, test))
title = paste("correlation: ", round(cor(pred, test$Biomass)[[1]], 2),
"  |  mean squared error: ", round(mean(rf.NoSpp$mse), 2),
"  |  R-squared: ", round(mean(rf.NoSpp$rsq), 2),
sep = "")
pdf(paste0(modelName,".pdf"))
varImpPlot(rf.NoSpp, main = title)
dev.off()
#return()
}
PPA <- models$Forest1 %>%
select(-Model, -SeedRain)
#F1C1 <- randomForest_4conditions(PPA,1,meta)
F1C3 <- randomForest_4conditions("F1C3",PPA,32,meta)
F1C1 <- randomForest_4conditions(PPA,1,meta)
F1C1 <- randomForest_4conditions("F1C1",PPA,1,meta)
F1C2 <- randomForest_4conditions("F1C2",PPA,1,iso)
F1C3 <- randomForest_4conditions("F1C3",PPA,32,meta)
F1C4 <- randomForest_4conditions("F1C4",PPA,32,iso)
options(width = 1000)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
#fig.height = 4,
#fig.width = 8,
size = "small")
library(data.table)
library(tidyverse)
library(ggthemes)
library(gganimate)
library(viridis)
library(cowplot)
library(scales)
library(plotly)
library(randomForest)
library(pdp)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)); setwd("../")
base_dir          <- getwd()
scripts_dir       <- paste0(base_dir, "/R")
tmp_dir           <- paste0(base_dir, "/tmp")
raw_data_dir      <- paste0(base_dir, "/data/raw")
#source(paste0(scripts_dir, "/readModels.R"))
source(paste0(scripts_dir, "/readIBC.R"))
IBC_grass <- models$Grass3 %>%
select(-Productivity, -Model, -SeedRain) %>%
mutate(SpeciesID = as.factor(SpeciesID))
IBC_grass_traits <- IBC_grass_traits %>%
mutate(SpeciesID = as.factor(SpeciesID))
#IBC_grass <- inner_join(IBC_grass, IBC_grass_traits, by = c("SpeciesID"))
IBC_grass <- inner_join(IBC_grass, IBC_grass_traits) %>%
select(Rep, Ninitial, SpeciesID, Year, Stage, Biomass, LMR, MaxMass, Gmax, SLA, meanSpacerLength)
IBC_grass
options(width = 1000)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
fig.width = 4,
fig.width = 8,
size = "small")
library(data.table)
library(tidyverse)
library(scales)
library(ggplot2)
library(ggthemes)
library(gganimate)
library(viridis)
library(cowplot)
library(plotly)
#library(randomForest)
library(ggpubr)
library(pdp)
library(dplyr)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)); setwd("../../")
base_dir          <- getwd()
scripts_dir       <- paste0(base_dir, "/R")
raw_data_dir      <- paste0(base_dir, "/data/raw")
tmp_dir           <- paste0(base_dir, "/tmp")
### Grass1 (Adam's model)
source(paste0(scripts_dir, "/to_test/readAdam.R"))
models$Grass1
adam
#library(data.table)
#library(tidyverse)
#library(ggthemes)
#library(gganimate)
#library(viridis)
#library(cowplot)
#library(scales)
#library(plotly)
library(randomForest)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)); setwd("../../")
base_dir          <- getwd()
base_dir          <- getwd()
scripts_dir       <- paste0(base_dir, "/R")
tmp_dir           <- paste0(base_dir, "/tmp")
raw_data_dir      <- paste0(base_dir, "/data/raw")
### Grass1 (Adam's model)
source(paste0(scripts_dir, "/to_test/readAdam.R"))
adam <- adam %>%
ungroup() %>% # There shouldn't be groups anyways
mutate(Biomass = scales::rescale(Biomass,
to = c(0, 100)))
adam <- adam %>%
select(-Model, -SeedRain) %>%
mutate(SpeciesID = as.factor(SpeciesID))
adam_traits <- adam_traits %>%
mutate(SpeciesID = as.factor(SpeciesID))
adam <- inner_join(adam, adam_traits, by = c("SpeciesID"))
adam
lindsay <- lindsay %>%
ungroup() %>% # There shouldn't be groups anyways
mutate(Biomass = scales::rescale(Biomass,
to = c(0, 100)))
lindsay <- lindsay %>%
select(-Model, -SeedRain) %>%
mutate(SpeciesID = as.factor(SpeciesID))
lindsay_traits <- lindsay_traits %>%
mutate(SpeciesID = as.factor(SpeciesID))
lindsay <- inner_join(lindsay, lindsay_traits, by = c("SpeciesID"))
#setwd(dirname(rstudioapi::getActiveDocumentContext()$path)); setwd("../../")
#base_dir          <- getwd()
base_dir          <- setwd("../../")
scripts_dir       <- paste0(base_dir, "/R")
tmp_dir           <- paste0(base_dir, "/tmp")
raw_data_dir      <- paste0(base_dir, "/data/raw")
### Grass2 (Lindsay's model)
source(paste0(scripts_dir, "/to_test/readLindsay.R"))
lindsay <- lindsay %>%
ungroup() %>% # There shouldn't be groups anyways
mutate(Biomass = scales::rescale(Biomass,
to = c(0, 100)))
lindsay <- lindsay %>%
select(-Model, -SeedRain) %>%
mutate(SpeciesID = as.factor(SpeciesID))
lindsay_traits <- lindsay_traits %>%
mutate(SpeciesID = as.factor(SpeciesID))
lindsay <- inner_join(lindsay, lindsay_traits, by = c("SpeciesID"))
### Grass3 (IBC-grass)
source(paste0(scripts_dir, "/to_test/readIBC.R"))
#IBC_grass <- models$Grass3
IBC_grass_traits <- IBC_grass_traits %>% mutate(SpeciesID = as.character(SpeciesID))
IBC_grass <- inner_join(IBC_grass.NDD, IBC_grass_traits) %>%
select(Rep, Ninitial, SpeciesID, Year, Stage, Productivity, Biomass, LMR, MaxMass, Gmax, SLA, meanSpacerLength)
#IBC_grass <- models$Grass3 %>%
#    select(-Model, -SeedRain) %>%
#    mutate(SpeciesID = as.factor(SpeciesID))
#
IBC_grass_traits <- IBC_grass_traits %>%
mutate(SpeciesID = as.factor(SpeciesID))
IBC_grass <- inner_join(IBC_grass.NDD, IBC_grass_traits) %>%
select(Rep, Ninitial, SpeciesID, Year, Stage, Productivity, Biomass, LMR, MaxMass, Gmax, SLA, meanSpacerLength)
#
IBC_grass <- inner_join(IBC_grass, IBC_grass_traits, by = c("SpeciesID"))
#
IBC_grass <- inner_join(IBC_grass.NDD, IBC_grass_traits, by = c("SpeciesID"))
### Forest1 (PPA)
source(paste0(scripts_dir, "/to_test/readPPA.R"))
models$Forest1
#PPA <- models$Forest1 %>%
PPA <- PPA %>%
select(-Model, -SeedRain)
F1C1 <- randomForest_4conditions("F1C1",PPA,1,meta)
PPA
PPA <- models$Forest1 %>%
select(-Model, -SeedRain)
PPA
### Forest2 (TROLL)
source(paste0(scripts_dir, "/to_test/readTROLL.R"))
troll <- troll %>%
ungroup() %>% # There shouldn't be groups anyways
mutate(Biomass = scales::rescale(Biomass,
to = c(0, 100)))
troll <- troll %>%
select(-Model, -SeedRain) %>%
mutate(SpeciesID = as.factor(SpeciesID))
troll_traits <- troll_traits %>%
mutate(SpeciesID = as.factor(SpeciesID))
troll <- inner_join(troll, troll_traits, by = c("SpeciesID"))
troll <- troll %>%
mutate(h_realmax = hmax * dmax / (dmax + ah)) %>%
select(-hmax, -ah)
F2C1 <- randomForest_4conditions("F2C1",troll,1,meta)
troll
IBC_grass.NDD
IBC_grass <- inner_join(IBC_grass.NDD, IBC_grass_traits) %>%
select(Rep, Ninitial, SpeciesID, Year, Stage, Productivity, Biomass, LMR, MaxMass, Gmax, SLA, meanSpacerLength)
options(width = 1000)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
#fig.height = 4,
#fig.width = 8,
size = "small")
model_list <- c(G1C1,G1C2,G1C3,G1C4)
base_dir          <- setwd("../../")
scripts_dir       <- paste0(base_dir, "/R")
tmp_dir           <- paste0(base_dir, "/tmp")
raw_data_dir      <- paste0(base_dir, "/data/raw")
#source(paste0(scripts_dir, "/readModels.R"))
source(paste0(scripts_dir, "/to_test/randomForest_4conditions.R"))
### Grass1 (Adam's model)
source(paste0(scripts_dir, "/to_test/readAdam.R"))
adam <- models$Grass1 %>%
ungroup() %>% # There shouldn't be groups anyways
mutate(Biomass = scales::rescale(Biomass,
to = c(0, 100)))%>%
select(-Model, -SeedRain, -abmi)
adam
base_dir          <- setwd("../../")
scripts_dir       <- paste0(base_dir, "/R")
tmp_dir           <- paste0(base_dir, "/tmp")
raw_data_dir      <- paste0(base_dir, "/data/raw")
#source(paste0(scripts_dir, "/readModels.R"))
source(paste0(scripts_dir, "/to_test/randomForest_4conditions.R"))
### Grass1 (Adam's model)
source(paste0(scripts_dir, "/to_test/readAdam.R"))
adam <- models$Grass1 %>%
ungroup() %>% # There shouldn't be groups anyways
mutate(Biomass = scales::rescale(Biomass,
to = c(0, 100)))%>%
select(-Model, -SeedRain, -abmi) #Removed abmi because it is highly correlated to biomass
G1C1 <- randomForest_4conditions("G1C1",adam,1,meta)
G1C1 <- randomForest_4conditions("G1C1",adam,1,meta)
G1C1 <- randomForest_4conditions("G1C1",adam,1,meta)
library(plotly)
dplot3.varimp(rf, main = title, font.family = "Open Sans", font.size = 18, font.color = "000")
G1C1 <- randomForest_4conditions("G1C1",adam,1,meta)
G1C1 <- randomForest_4conditions("G1C1",adam,1,meta)
#source(paste0(scripts_dir, "/readModels.R"))
source(paste0(scripts_dir, "/to_test/randomForest_4conditions.R"))
G1C1 <- randomForest_4conditions("G1C1",adam,1,meta)
G1C2 <- randomForest_4conditions("G1C2",adam,1,iso)
G1C3 <- randomForest_4conditions("G1C3",adam,32,meta)
G1C4 <- randomForest_4conditions("G1C4",adam,32,iso)
#source(paste0(scripts_dir, "/readModels.R"))
source(paste0(scripts_dir, "/to_test/randomForest_4conditions.R"))
G1C1 <- randomForest_4conditions("G1C1",adam,1,meta)
G1C2 <- randomForest_4conditions("G1C2",adam,1,iso)
G1C1 <- randomForest_4conditions("G1C1",adam,1,meta)
#source(paste0(scripts_dir, "/readModels.R"))
source(paste0(scripts_dir, "/to_test/randomForest_4conditions.R"))
G1C1 <- randomForest_4conditions("G1C1",adam,1,meta)
#source(paste0(scripts_dir, "/readModels.R"))
source(paste0(scripts_dir, "/to_test/randomForest_4conditions.R"))
G1C1 <- randomForest_4conditions("G1C1",adam,1,meta)
#source(paste0(scripts_dir, "/readModels.R"))
source(paste0(scripts_dir, "/to_test/randomForest_4conditions.R"))
G1C1 <- randomForest_4conditions("G1C1",adam,1,meta)
#source(paste0(scripts_dir, "/readModels.R"))
source(paste0(scripts_dir, "/to_test/randomForest_4conditions.R"))
G1C1 <- randomForest_4conditions("G1C1",adam,1,meta)
#source(paste0(scripts_dir, "/readModels.R"))
source(paste0(scripts_dir, "/to_test/randomForest_4conditions.R"))
G1C1 <- randomForest_4conditions("G1C1",adam,1,meta)
#source(paste0(scripts_dir, "/readModels.R"))
source(paste0(scripts_dir, "/to_test/randomForest_4conditions.R"))
G1C1 <- randomForest_4conditions("G1C1",adam,1,meta)
varImpPlot(G1C1, main = title, font.main=14, font.lab=4, font.sub=4)
varImpPlot(G1C1, main = title, font.main=14, font.lab=4, font.sub=8)
varImpPlot(G1C1, main = title, font.main=8, font.lab=4, font.sub=8)
varImpPlot(G1C1, main = title, font.main=4, font.lab=4, font.sub=4)
varImpPlot(G1C1, main = title, font.main=4, font.lab=4, font.sub=1)
varImpPlot(G1C1, main = title)
varImpPlot(G1C1, main = title, font.lab=10)
varImpPlot(G1C1, main = title, font.lab=4)
varImpPlot(G1C1, main = title, font.lab=1)
varImpPlot(G1C1, main = title, font.sub=1)
varImpPlot(G1C1, main = title, font.sub=4)
varImpPlot(G1C1, main = title, font.main=4, font.lab=4, font.sub=4)
varImpPlot(G1C1, main = title, cex.main=2, cex.lab=1.7, cex.sub=1.2)
varImpPlot(G1C1, main = title, cex.main=2, cex.lab=2, cex.sub=1.2)
varImpPlot(G1C1, main = title, cex.main=2, cex.lab=1.7, cex.sub=1.2)
varImpPlot(G1C1, main = title, cex.main=2, cex.lab=1.7, cex.sub=1.7)
varImpPlot(G1C1, main = title, cex.main=2, cex.lab=1.7, cex.sub=1.2)
varImpPlot(G1C1, main = title, cex.main=1.5, cex.lab=1.7, cex.sub=1.2)
varImpPlot(G1C1, main = title, cex. = 1.7)
varImpPlot(G1C1, main = title, cex.main = 1.7, cex.axis = 1.7)
varImpPlot(G1C1, main = title, cex.main = 1.7, cex.axis = 7)
varImpPlot(G1C1, main = title, cex=2)
varImpPlot(G1C1, main = title, cex=1.7)
#source(paste0(scripts_dir, "/readModels.R"))
source(paste0(scripts_dir, "/to_test/randomForest_4conditions.R"))
G1C1 <- randomForest_4conditions("G1C1",adam,1,meta)
#source(paste0(scripts_dir, "/readModels.R"))
source(paste0(scripts_dir, "/to_test/randomForest_4conditions.R"))
G1C1 <- randomForest_4conditions("G1C1",adam,1,meta)
#source(paste0(scripts_dir, "/readModels.R"))
source(paste0(scripts_dir, "/to_test/randomForest_4conditions.R"))
G1C1 <- randomForest_4conditions("G1C1",adam,1,meta)
G1C1 <- randomForest_4conditions("G1C1",adam,1,meta)
#source(paste0(scripts_dir, "/readModels.R"))
source(paste0(scripts_dir, "/to_test/randomForest_4conditions.R"))
G1C1 <- randomForest_4conditions("G1C1",adam,1,meta)
#source(paste0(scripts_dir, "/readModels.R"))
source(paste0(scripts_dir, "/to_test/randomForest_4conditions.R"))
G1C1 <- randomForest_4conditions("G1C1",adam,1,meta)
varImpPlot(G1C1,main = title, cex=cex)
varImpPlot(G1C1,main = title, cex=1.2)
varImpPlot(G1C1,main = title, cex=1.3)
varImpPlot(G1C1,main = title, cex=1.5)
varImpPlot(G1C1,main = title, cex=1.7)
#source(paste0(scripts_dir, "/readModels.R"))
source(paste0(scripts_dir, "/to_test/randomForest_4conditions.R"))
G1C1 <- randomForest_4conditions("G1C1",adam,1,meta)
#source(paste0(scripts_dir, "/readModels.R"))
source(paste0(scripts_dir, "/to_test/randomForest_4conditions.R"))
G1C1 <- randomForest_4conditions("G1C1",adam,1,meta)
G1C2 <- randomForest_4conditions("G1C2",adam,1,iso)
G1C3 <- randomForest_4conditions("G1C3",adam,32,meta)
G1C4 <- randomForest_4conditions("G1C4",adam,32,iso)
ggplot2::ggplot(varImp(G1C1,main = title))
ggplot2::ggplot(varImpPlot(G1C1,main = title))
